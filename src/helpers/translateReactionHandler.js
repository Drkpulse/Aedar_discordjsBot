const { Translate } = require('@google-cloud/translate').v2;
const { EmbedBuilder } = require('discord.js');

const translate = new Translate({ key: process.env.GOOGLE_API_KEY });

const flagToLanguage = {
    "ðŸ‡ºðŸ‡¸": "en",
    "ðŸ‡¬ðŸ‡§": "en",
    "ðŸ‡¨ðŸ‡¦": "en",
    "ðŸ‡¦ðŸ‡º": "en",
    "ðŸ‡³ðŸ‡¿": "en",
    "ðŸ‡®ðŸ‡ª": "en",
    "ðŸ‡¿ðŸ‡¦": "en",
    "ðŸ‡®ðŸ‡³": "hi",
    "ðŸ‡µðŸ‡°": "ur",
    "ðŸ‡§ðŸ‡©": "bn",
    "ðŸ‡·ðŸ‡´": "ro",
    "ðŸ‡«ðŸ‡·": "fr",
    "ðŸ‡§ðŸ‡ª": "fr",
    "ðŸ‡¨ðŸ‡­": "fr",
    "ðŸ‡²ðŸ‡¦": "fr",
    "ðŸ‡©ðŸ‡¿": "fr",
    "ðŸ‡¹ðŸ‡³": "fr",
    "ðŸ‡©ðŸ‡ª": "de",
    "ðŸ‡¦ðŸ‡¹": "de",
    "ðŸ‡¨ðŸ‡­": "de",
    "ðŸ‡±ðŸ‡º": "de",
    "ðŸ‡ªðŸ‡¸": "es",
    "ðŸ‡²ðŸ‡½": "es",
    "ðŸ‡¨ðŸ‡´": "es",
    "ðŸ‡¦ðŸ‡·": "es",
    "ðŸ‡¨ðŸ‡±": "es",
    "ðŸ‡µðŸ‡ª": "es",
    "ðŸ‡»ðŸ‡ª": "es",
    "ðŸ‡ºðŸ‡¾": "es",
    "ðŸ‡ªðŸ‡¨": "es",
    "ðŸ‡µðŸ‡¦": "es",
    "ðŸ‡¨ðŸ‡·": "es",
    "ðŸ‡­ðŸ‡³": "es",
    "ðŸ‡¬ðŸ‡¹": "es",
    "ðŸ‡¸ðŸ‡»": "es",
    "ðŸ‡³ðŸ‡®": "es",
    "ðŸ‡µðŸ‡¾": "es",
    "ðŸ‡§ðŸ‡´": "es",
    "ðŸ‡¨ðŸ‡º": "es",
    "ðŸ‡©ðŸ‡´": "es",
    "ðŸ‡µðŸ‡·": "es",
    "ðŸ‡®ðŸ‡¹": "it",
    "ðŸ‡»ðŸ‡¦": "it",
    "ðŸ‡¸ðŸ‡²": "it",
    "ðŸ‡¯ðŸ‡µ": "ja",
    "ðŸ‡°ðŸ‡·": "ko",
    "ðŸ‡¨ðŸ‡³": "zh-CN",
    "ðŸ‡¹ðŸ‡¼": "zh-TW",
    "ðŸ‡­ðŸ‡°": "zh-HK",
    "ðŸ‡¸ðŸ‡¬": "zh-SG",
    "ðŸ‡·ðŸ‡º": "ru",
    "ðŸ‡§ðŸ‡¾": "ru",
    "ðŸ‡°ðŸ‡¿": "ru",
    "ðŸ‡ºðŸ‡¦": "uk",
    "ðŸ‡µðŸ‡±": "pl",
    "ðŸ‡¨ðŸ‡¿": "cs",
    "ðŸ‡¸ðŸ‡°": "sk",
    "ðŸ‡­ðŸ‡º": "hu",
    "ðŸ‡·ðŸ‡´": "ro",
    "ðŸ‡§ðŸ‡¬": "bg",
    "ðŸ‡¬ðŸ‡·": "el",
    "ðŸ‡¹ðŸ‡·": "tr",
    "ðŸ‡®ðŸ‡·": "fa",
    "ðŸ‡¦ðŸ‡ª": "ar",
    "ðŸ‡¸ðŸ‡¦": "ar",
    "ðŸ‡ªðŸ‡¬": "ar",
    "ðŸ‡®ðŸ‡¶": "ar",
    "ðŸ‡¸ðŸ‡¾": "ar",
    "ðŸ‡±ðŸ‡§": "ar",
    "ðŸ‡¯ðŸ‡´": "ar",
    "ðŸ‡§ðŸ‡­": "ar",
    "ðŸ‡¶ðŸ‡¦": "ar",
    "ðŸ‡´ðŸ‡²": "ar",
    "ðŸ‡°ðŸ‡¼": "ar",
    "ðŸ‡¾ðŸ‡ª": "ar",
    "ðŸ‡²ðŸ‡¦": "ar",
    "ðŸ‡©ðŸ‡¿": "ar",
    "ðŸ‡¹ðŸ‡³": "ar",
    "ðŸ‡±ðŸ‡¾": "ar",
    "ðŸ‡²ðŸ‡·": "ar",
    "ðŸ‡¸ðŸ‡©": "ar",
    "ðŸ‡¸ðŸ‡´": "ar",
    "ðŸ‡§ðŸ‡·": "pt",
    "ðŸ‡µðŸ‡¹": "pt",
    "ðŸ‡¦ðŸ‡´": "pt",
    "ðŸ‡²ðŸ‡¿": "pt",
    "ðŸ‡¬ðŸ‡¼": "pt",
    "ðŸ‡¨ðŸ‡»": "pt",
    "ðŸ‡¹ðŸ‡±": "pt",
    // Add more flags and their corresponding languages as needed
};



module.exports = async (reaction, user, client) => {
	try {
		if (reaction.message.partial) await reaction.message.fetch();
		if (reaction.partial) await reaction.fetch();
		if (user.bot) return;

		const message = reaction.message;
		const emoji = reaction.emoji.name;

		//console.log(`Received reaction: ${emoji} from user: ${user.tag}`);

		if (!flagToLanguage[emoji]) {
			return;
		}

		const targetLanguage = flagToLanguage[emoji];
		const text = message.content;

		//console.log(`Translating message: "${text}" to language: ${targetLanguage}`);

		// Use the translate API to translate the message
		const [translations] = await translate.translate(text, targetLanguage);

		//console.log('Translation API response:', translations);

		const translatedText = Array.isArray(translations) ? translations[0] : translations;
		//console.log(`Translated text: ${translatedText}`);

		const embed = new EmbedBuilder()
			.setColor('#9966cc')
			.setTitle('Translation')
			.setDescription(`Translated to **${targetLanguage}**:\n${translatedText}`)
			.setFooter({ text: `Requested by ${user.tag}`, iconURL: user.displayAvatarURL({ dynamic: true }) });

		await message.reply({ embeds: [embed] });

	// Log command usage
	const date = new Date();
	const dateTime = `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;

	console.log(`[${dateTime}] User: ${user.tag} | Interaction: Reaction Translation to ${targetLanguage}`);

	} catch (error) {
		console.error('Error handling reaction:', error);
		await reaction.message.reply('Sorry, I couldn\'t translate the message.');
	}
};
